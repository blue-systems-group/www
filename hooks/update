#!/usr/bin/env bash

LOCKFILE="/home/git/www/blue.cse.buffalo.edu/deploy.lock"
LOCKFD=99

_lock()             { flock -$1 $LOCKFD; }
_no_more_locking()  { _lock u; _lock xn && rm -f $LOCKFILE; }
_prepare_locking()  { eval "exec $LOCKFD>\"$LOCKFILE\""; trap _no_more_locking EXIT; }

_prepare_locking

exlock_now()        { _lock xn; }

if ! [ -z "$1" ] && ! [ "refs/heads/deploy" == "$1" ]; then
  exit 0
fi

exlock_now || exit 0

export HOME="/home/git/"
WORKING_DIR=$HOME/www/blue.cse.buffalo.edu/

if ! [ -z "$3" ]; then
  git diff --binary $2 $3 > $WORKING_DIR/patch
  unset GIT_DIR
  cd $WORKING_DIR
  git fetch origin > /dev/null
  git reset --hard $2 > /dev/null
  if [ -f patch ]; then
    git apply patch > /dev/null >> /dev/null
    rm -f patch
  fi
else
  cd $WORKING_DIR
  git fetch origin > /dev/null
  git reset --hard origin/deploy > /dev/null
fi

echo "Building blue.cse.buffalo.edu..."

NVM_DIR="/home/git/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm

npm install
if node ./node_modules/metalsmith-blue/lib/index.js . --check --deploy; then
  rsync -crlpgoDi .build/* /mnt/ramdisk/blue.cse.buffalo.edu/www/ | while read unused filename; do
    curl --request PURGE 'http://127.0.0.1/$filename' > /dev/null 2> /dev/null
    echo "Updated $filename"
  done
  echo "Success. Thanks for updating the website."
else
  echo "Failed. Please try again."
  exit 1
fi
